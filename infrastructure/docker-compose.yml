x-airflow-common: &airflow-common
  build:
    context: ./airflow
    dockerfile: Dockerfile
  env_file: ./.env
  environment:
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/crypto_db
    AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres:5432/crypto_db
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: America/Buenos_Aires
    MLFLOW_TRACKING_URI: http://mlflow:5000
    MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    AWS_ACCESS_KEY_ID: minio
    AWS_SECRET_ACCESS_KEY: minio123
    SPARK_MASTER_URL: spark://spark-master:7077
    CHURN_DATA_ROOT: /opt/mlops
  volumes:
    - ../airflow/dags:/opt/airflow/dags
    - ../airflow/scripts:/opt/airflow/scripts
    - ../airflow/logs:/opt/airflow/logs
    - ../database/sql/init:/opt/airflow/sql
    - ../airflow/ge:/opt/airflow/ge
    - ../airflow/mlops:/opt/mlops
  depends_on:
    - postgres
    - redis
    - minio
    - minio-mc
    - mlflow

services:
  postgres:
    build:
      context: ./postgres
    container_name: crypto_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: crypto_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/sql/init:/docker-entrypoint-initdb.d

  pgadmin:
    build:
      context: ./pgadmin
    container_name: crypto_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.test
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres

  redis:
    build:
      context: ./redis
    container_name: crypto_redis

  minio:
    build:
      context: ./minio
      dockerfile: Dockerfile
    container_name: crypto_minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  minio-mc:
    build:
      context: ./minio
      dockerfile: Dockerfile.mc
    container_name: crypto_minio_mc
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    depends_on:
      - minio
    entrypoint: /bin/sh
    command: -c "/create_buckets.sh && sleep infinity"
    volumes:
      - ./minio/create_buckets.sh:/create_buckets.sh:ro

  airflow-init:
    <<: *airflow-common
    container_name: crypto_airflow_init
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --username admin --firstname Air --lastname Flow --role Admin --email admin@example.com --password admin || true"
    depends_on:
      - postgres
      - redis

  airflow-webserver:
    <<: *airflow-common
    container_name: crypto_airflow_webserver
    command: webserver
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - airflow-init

  airflow-scheduler:
    <<: *airflow-common
    container_name: crypto_airflow_scheduler
    command: scheduler
    restart: unless-stopped
    depends_on:
      - airflow-init

  airflow-worker:
    <<: *airflow-common
    container_name: crypto_airflow_worker
    command: celery worker
    restart: unless-stopped
    depends_on:
      - airflow-init

  mlflow:
    build:
      context: ./mlflow
    container_name: crypto_mlflow
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - minio

  jupyterlab:
    build:
      context: ./jupyterlab
    container_name: crypto_jupyterlab
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    volumes:
      - ../notebooks:/home/jovyan/work
      - ../airflow/mlops:/opt/mlops
    ports:
      - "8888:8888"
    depends_on:
      - mlflow

  spark-master:
    build:
      context: ./spark
    container_name: crypto_spark_master
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      SPARK_NO_DAEMONIZE: "true"
    ports:
      - "7077:7077"
      - "8082:8082"
    volumes:
      - ../airflow/mlops:/opt/mlops
    command: ["/opt/spark/bin/spark-class","org.apache.spark.deploy.master.Master","--host","spark-master","--port","7077","--webui-port","8082"]

  spark-worker:
    build:
      context: ./spark
    container_name: crypto_spark_worker
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      SPARK_NO_DAEMONIZE: "true"
      SPARK_WORKER_MEMORY: 2G
      SPARK_WORKER_CORES: 2
    depends_on:
      - spark-master
    volumes:
      - ../airflow/mlops:/opt/mlops
    command: ["/opt/spark/bin/spark-class","org.apache.spark.deploy.worker.Worker","spark://spark-master:7077","--webui-port","8083"]

  streamlit:
    build:
      context: ./streamlit
    container_name: crypto_streamlit
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
    volumes:
      - ../app:/app
    ports:
      - "8601:8601"
    depends_on:
      - mlflow

volumes:
  postgres_data:
  minio_data:
